{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "icanhelpyouwiththat",
    "description": "API for icanhelpyouwiththat",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "ICANHELPYOUWITHTHAT",
      "email": "zmagaw@gmail.com",
      "url": "icanhelpyouwiththat"
    },
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/profile": {
      "get": {
        "description": "Returns the details of a profile - a profile can be for an individual or an organization.\n",
        "operationId": "findProfile",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "type": "array",
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "profile response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions"
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new profile.",
        "operationId": "addProfile",
        "parameters": [
          {
            "name": "profile",
            "in": "body",
            "description": "Profile to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile response",
            "schema": {
              "$ref": "#/definitions"
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "Returns a user based on a single ID, if the user does not have access to the profile",
        "operationId": "find profile by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of profile to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile response",
            "schema": {
              "$ref": "#/definitions"
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single profile based on the ID supplied",
        "operationId": "deleteProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of profile to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "profile deleted"
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/skill": {
      "get": {
        "description": "Returns the details of a skill.\n",
        "operationId": "findSkill",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "type": "array",
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "skill response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Skill"
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new skill.",
        "operationId": "addSkill",
        "parameters": [
          {
            "name": "skill",
            "in": "body",
            "description": "Skill to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewSkill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Skill response",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "Profile": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "karma": {
          "type": "integer",
          "format": "int64"
        },
        "mob_phone": {
          "type": "string"
        },
        "geo_location": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "mission": {
          "type": "string"
        },
        "admin": {
          "type": "integer",
          "format": "int64"
        },
         "likes": {
            "type": "integer",
          "format": "int64"
      },
       "invites": {
            "type": "integer",
          "format": "int64"
      },
       "linked_accts": {
            "type": "string"
      },
       "email": {
          "type": "string"
        }
      }
    },
    "NewProfile": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "karma": {
          "type": "integer",
          "format": "int64"
        },
        "mob_phone": {
          "type": "string"
        },
        "geo_location": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "mission": {
          "type": "string"
        },
        "admin": {
          "type": "integer",
          "format": "int64"
        },
         "likes": {
            "type": "integer",
          "format": "int64"
      },
       "invites": {
            "type": "integer",
          "format": "int64"
      },
       "linked_accts": {
            "type": "string"
      },
       "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
"Skill": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Activity": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "date-time": {
          "type": "string"
        },
        "geo-location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "goal": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
